{"version":3,"sources":["webpack:///./src/templates/faq.tsx","webpack:///./src/components/docs/DocsContribution/DocsContribution.tsx"],"names":["FAQTemplate","data","markdownRemark","site","frontmatter","siteMetadata","navHidden","docsPage","title","name","content","excerpt","property","subtitle","description","renderAst","htmlAst","version","siteLastUpdated","socials","query","DocsContribution","edges","slug","Wrapper","mt","pt","undefined","Fragment","size","mb","href","target","rel","node","gitRemote","webLink","ref","substring","lastIndexOf","styled","Box","colors","grey02"],"mappings":"4FAAA,8LA4EeA,UAnCmC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAC3CC,EAAyBD,EAAzBC,eAAgBC,EAASF,EAATE,KAChBC,EAAgBF,EAAhBE,YACAC,EAAiBF,EAAjBE,aAER,OACE,kBAAC,IAAD,CAAaC,WAAS,GACpB,kBAAC,IAAD,CAAMC,UAAQ,GACZ,kBAAC,SAAD,KACE,+BACGL,EAAeE,YAAYI,MAD9B,MAC+CL,EAAKE,aAAaG,OAEjE,0BAAMC,KAAK,cAAcC,QAASR,EAAeS,UACjD,0BAAMC,SAAS,WAAWF,QAASR,EAAeE,YAAYI,QAC9D,0BAAMI,SAAS,iBAAiBF,QAASR,EAAeS,WAE1D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,MAAOJ,EAAYI,MAAOK,SAAUT,EAAYU,cAC5D,kBAAC,IAAD,KAAkBC,YAAUb,EAAec,UAC3C,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAASZ,EAAaY,QACtBC,gBAAiBb,EAAaa,gBAC9BC,QAASd,EAAac,gBAY/B,IAAMC,EAAQ,c,iIClDNC,EAvBqB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OAChC,kBAACC,EAAD,CAASC,GAAG,KAAKC,GAAG,MAEnBJ,GAAqBK,MAAZL,EAAM,GAChB,kBAAC,IAAMM,SAAP,KACA,kBAAC,IAAD,CAASC,KAAM,IAAKJ,GAAI,EAAGK,GAAG,MAA9B,qCAGE,kBAAC,IAAD,CAAWD,KAAM,KAAjB,mEACmE,IACjE,uBAAGE,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBACxD,yDACG,KAJP,6DAK6D,IAC3D,uBAAGF,KAAMT,EAAM,GAAGY,KAAKC,UAAUC,QAAQ,SAASd,EAAM,GAAGY,KAAKC,UAAUE,IAAMd,EAAKe,UAAU,EAAEf,EAAKgB,YAAY,MAAM,MAAOP,OAAO,SAASC,IAAI,uBAAnJ,6BAEK,IARP,KAJF,KAekC,KAMhCT,EAAUgB,YAAOC,KAAV,+EAAGD,CAAH,+CACaE,IAAOC","file":"component---src-templates-faq-tsx-75f8e00e1e517765ac68.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport { RouteComponentProps } from '@reach/router';\r\n\r\nimport { Page } from 'components/layout/Page';\r\n\r\nimport { Container } from 'components/layout/Container';\r\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\r\nimport { DocsHeader } from 'components/docs/DocsHeader';\r\nimport MarkdownContent from 'components/page/Markdown/MarkdownContent';\r\n\r\nimport { MenuNode, Edge } from 'interfaces/nodes';\r\nimport { Footer, FooterWrapper } from 'components/layout/Footer';\r\nimport IndexLayout from 'layouts';\r\nimport renderAst from 'utils/renderAst';\r\nimport { SiteMetadata } from 'interfaces/gatsby';\r\nimport { DocsContribution } from 'components/docs/DocsContribution';\r\n\r\ninterface PageTemplateProps extends RouteComponentProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: SiteMetadata;\r\n    };\r\n    sectionList: {\r\n      edges: Edge<MenuNode>[];\r\n    };\r\n    markdownRemark: {\r\n      htmlAst: any;\r\n      excerpt: string;\r\n      frontmatter: {\r\n        id: string;\r\n        title: string;\r\n        description?: string;\r\n        prev?: string;\r\n        next?: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst FAQTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\r\n  const { markdownRemark, site } = data;\r\n  const { frontmatter } = markdownRemark;\r\n  const { siteMetadata } = site;\r\n\r\n  return (\r\n    <IndexLayout navHidden>\r\n      <Page docsPage>\r\n        <Helmet>\r\n          <title>\r\n            {markdownRemark.frontmatter.title} &middot; {site.siteMetadata.title}\r\n          </title>\r\n          <meta name=\"description\" content={markdownRemark.excerpt} />\r\n          <meta property=\"og:title\" content={markdownRemark.frontmatter.title} />\r\n          <meta property=\"og:description\" content={markdownRemark.excerpt} />\r\n        </Helmet>\r\n        <DocsWrapper>\r\n          <Container>\r\n            <DocsHeader title={frontmatter.title} subtitle={frontmatter.description} />\r\n            <MarkdownContent>{renderAst(markdownRemark.htmlAst)}</MarkdownContent>\r\n            <DocsContribution />\r\n            <FooterWrapper>\r\n              <Footer\r\n                version={siteMetadata.version}\r\n                siteLastUpdated={siteMetadata.siteLastUpdated}\r\n                socials={siteMetadata.socials}\r\n              />\r\n            </FooterWrapper>\r\n          </Container>\r\n        </DocsWrapper>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default FAQTemplate;\r\n\r\nexport const query = graphql`\r\n  query FAQTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        sidebarTitle\r\n        sidebarSubtext\r\n        siteLastUpdated\r\n        description\r\n        version\r\n        siteUrl\r\n        keywords\r\n        author {\r\n          name\r\n          url\r\n          email\r\n        }\r\n        socials {\r\n          name\r\n          imgpath\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      htmlAst\r\n      excerpt\r\n      frontmatter {\r\n        id\r\n        title\r\n        description\r\n        prev\r\n        next\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { colors } from 'utils/variables';\r\nimport { Heading, Paragraph, Box } from 'components/foundations';\r\n\r\nconst DocsContribution: React.SFC = ({edges, slug}) => (\r\n    <Wrapper mt=\"xl\" pt=\"xl\">\r\n    \r\n    {edges && edges[0] != undefined ? \r\n    <React.Fragment>\r\n    <Heading size={500} mt={0} mb=\"sm\">\r\n      Contributing to the Documentation\r\n    </Heading>\r\n      <Paragraph size={400}>\r\n        Is something missing/incorrect? Please let us know by contacting{' '}\r\n        <a href=\"mailto:info@hpccsystems.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>info@hpccsystems.com</strong>\r\n        </a>{'. '}      \r\n        If you know how to fix it straight away, donâ€™t hesitate to{' '}\r\n        <a href={edges[0].node.gitRemote.webLink+'/blob/'+edges[0].node.gitRemote.ref + slug.substring(0,slug.lastIndexOf('/'))+'.md'} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Edit in Github repository\r\n        </a>{' '}\r\n        .\r\n        \r\n      </Paragraph> </React.Fragment>: ''}\r\n  </Wrapper>\r\n);\r\n\r\nexport default DocsContribution;\r\n\r\nconst Wrapper = styled(Box)`\r\n  border-top: 1px solid ${colors.grey02};\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n"],"sourceRoot":""}