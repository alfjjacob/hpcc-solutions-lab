{"componentChunkName":"component---src-templates-page-tsx","path":"/hpcc/LearnECL/AdvanceConcepts/normalize/","result":{"data":{"site":{"siteMetadata":{"title":"HPCCSystems Solutions Lab","sidebarTitle":"HPCCSystems Solutions Lab","sidebarSubtext":"Documentation","siteLastUpdated":"2020-06-05T21:56:30.418Z","description":"HPCC Systems is a mature platform that has been heavily used in commercial applications for almost two decades, predating the development of Hadoop. Created by LexisNexis Risk Solutions, an innovative pioneer in big data processing, and open source for nearly a decade now, HPCC Systems features a vibrant development community that continues to push the boundaries of big data.","version":"3.5.5","siteUrl":"https://docs.kata.ai","keywords":"hpcc, hpccsystems, ecl","author":{"name":"HPCCSystems.com","url":"https://hpccsystems.com","email":"info@hpccsystems.com"},"socials":[{"name":"Twitter","imgpath":"icon-twitter.svg","url":"https://twitter.com/KataDotAI"},{"name":"GitHub","imgpath":"icon-github.svg","url":"https://github.com/kata-ai"},{"name":"LinkedIn","imgpath":"icon-linkedin.svg","url":"https://www.linkedin.com/company/yesboss/"},{"name":"Medium","imgpath":"icon-medium.svg","url":"https://medium.com/kata-engineering"}]}},"sectionList":{"edges":[{"node":{"title":"Advanced Concepts","items":[{"id":"FUNCTION","slug":"/hpcc/LearnECL/AdvanceConcepts/function","title":"FUNCTION"},{"id":"JOIN","slug":"/hpcc/LearnECL/AdvanceConcepts/join","title":"JOIN"},{"id":"MODULE","slug":"/hpcc/LearnECL/AdvanceConcepts/module","title":"MODULE"},{"id":"PROJECT","slug":"/hpcc/LearnECL/AdvanceConcepts/project","title":"PROJECT"},{"id":"TABLE","slug":"/hpcc/LearnECL/AdvanceConcepts/table","title":"TABLE"},{"id":"TRANSFORM","slug":"/hpcc/LearnECL/AdvanceConcepts/transform","title":"TRANSFORM"}]}},{"node":{"title":"Main Concepts","items":[{"id":"dataset","slug":"/hpcc/LearnECL/MainConcepts/dataset","title":"DATASET"},{"id":"filter","slug":"/hpcc/LearnECL/MainConcepts/filter","title":"FILTER"},{"id":"introducingECL","slug":"/hpcc/LearnECL/MainConcepts/introducingECL","title":"INTRODUCING ECL"},{"id":"mathematics","slug":"/hpcc/LearnECL/MainConcepts/mathematics","title":"MATHEMATICS"},{"id":"namingConvension","slug":"/hpcc/LearnECL/MainConcepts/namingConvension","title":"NAMING CONVENTION"},{"id":"output","slug":"/hpcc/LearnECL/MainConcepts/output","title":"OUTPUT"},{"id":"recordstructure","slug":"/hpcc/LearnECL/MainConcepts/recordStructure","title":"RECORD Structure"},{"id":"sort","slug":"/hpcc/LearnECL/MainConcepts/sort","title":"SORT"}]}}]},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Normalize"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This function pulls child record set out of parent record set."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to create normalize."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"One parameter transform"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It processes through all records in the recordset executing transform function through all the child dataset records in each record. This method is used when we have embedded child dataset."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Must have a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"RIGHT"}]},{"type":"text","value":" record of the same format as the child dataset."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The resulting record set format does not need to be the same as the input."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Child layout is being called as an embedded dataset."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"Child_Layout := RECORD\n    FieldOne;\n    FieldTwo;\nEND;\n\n//Parent Layout with child dataset\nParent_Layout := RECORD\n    ...\n    ...\n    DATASET(Child_Layout) Children; //Embedded child layout\nEND;\n\nChild_Layout xForm(Child_Layout Ri) := TRANSFORM\n     SELF := Ri;\nEND;\n\nattribName := NORMALIZE(parent dataset,\n                         LEFT.Children, //Sending only the child dataset only\n                         xForm(RIGHT));\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Two parameter transform"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Process through all records in the recordset executing transform function the expect number of times on each record."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Must have a "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"LEFT"}]},{"type":"text","value":" record of the same format as the recordset."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"COUNTER"}]},{"type":"text","value":" specifying the number of times the transform will be executing per record. For example if a record has 3 address you want to extract, you assign three, and if the next record only has 2 addresses, and you want only the first address, you assign one."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The resulting record set format does not need to be the same as the input."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"Parent_layout := RECORD\n  // This number defines, how many times transform should execute per record\n  INTEGER numOfExe;\n  fieldOne;\n  fielsTwo;\n  ...\n  ...\nEND;\n\n//Child layout being extracted\nchild_layout := RECORD\n  result;\n  ...\n  ...\nEND;\n\n\nchild_layout xForm(Parent_layout Li, INTEGER counting) := TRANSFORM\n\n        //counting will only execute the number of times defined by expilicitCount\n        SELF.result     := CHOOSE(counting, Li.fieldOne, Li.fieldTwo);\n       ...\n       ...\n\nEND;\n\nextractChild := NORMALIZE(Paret Dataset,\n                          //Number of times transform should go through a record\n                          LEFT.expilicitCount,\n                          xForm(LEFT,COUNTER));\n"}]}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/hpcc-solutions-lab/hpcc/LearnECL/AdvanceConcepts/normalize/#normalize\">Normalize</a></p>\n<ul>\n<li><a href=\"/hpcc-solutions-lab/hpcc/LearnECL/AdvanceConcepts/normalize/#one-parameter-transform\">One parameter transform</a></li>\n<li><a href=\"/hpcc-solutions-lab/hpcc/LearnECL/AdvanceConcepts/normalize/#two-parameter-transform\">Two parameter transform</a></li>\n</ul>\n</li>\n</ul>","excerpt":"NormalizeThis function pulls child record set out of parent record set.There are two ways to create normalize.One parameter transformItâ€¦","frontmatter":{"id":null,"title":"","description":null,"prev":null,"next":null},"fields":{"slug":"/hpcc/LearnECL/AdvanceConcepts/normalize/"}},"allFile":{"edges":[{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/Learn-ECL","ref":"master","pathname":"/hpccsystems-solutions-lab/Learn-ECL.git","organization":"hpccsystems-solutions-lab","name":"Learn-ECL"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/ECL-Pattern-Job-Scheduling","ref":"master","pathname":"/hpccsystems-solutions-lab/ECL-Pattern-Job-Scheduling.git","organization":"hpccsystems-solutions-lab","name":"ECL-Pattern-Job-Scheduling"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/CodeDay_May2020","ref":"master","pathname":"/hpccsystems-solutions-lab/CodeDay_May2020.git","organization":"hpccsystems-solutions-lab","name":"CodeDay_May2020"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/ECL-Sample-Cheatsheet","ref":"master","pathname":"/hpccsystems-solutions-lab/ECL-Sample-Cheatsheet.git","organization":"hpccsystems-solutions-lab","name":"ECL-Sample-Cheatsheet"}}}]}},"pageContext":{"slug":"/hpcc/LearnECL/AdvanceConcepts/normalize/"}}}