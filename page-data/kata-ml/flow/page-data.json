{"componentChunkName":"component---src-templates-page-tsx","path":"/kata-ml/flow/","result":{"data":{"site":{"siteMetadata":{"title":"HPCCSystems Solutions Lab","sidebarTitle":"HPCCSystems Solutions Lab","sidebarSubtext":"Documentation","siteLastUpdated":"2020-06-05T21:56:30.418Z","description":"HPCC Systems is a mature platform that has been heavily used in commercial applications for almost two decades, predating the development of Hadoop. Created by LexisNexis Risk Solutions, an innovative pioneer in big data processing, and open source for nearly a decade now, HPCC Systems features a vibrant development community that continues to push the boundaries of big data.","version":"3.5.5","siteUrl":"https://docs.kata.ai","keywords":"hpcc, hpccsystems, ecl","author":{"name":"HPCCSystems.com","url":"https://hpccsystems.com","email":"info@hpccsystems.com"},"socials":[{"name":"Twitter","imgpath":"icon-twitter.svg","url":"https://twitter.com/KataDotAI"},{"name":"GitHub","imgpath":"icon-github.svg","url":"https://github.com/kata-ai"},{"name":"LinkedIn","imgpath":"icon-linkedin.svg","url":"https://www.linkedin.com/company/yesboss/"},{"name":"Medium","imgpath":"icon-medium.svg","url":"https://medium.com/kata-engineering"}]}},"sectionList":{"edges":[{"node":{"title":"Advanced Concepts","items":[{"id":"FUNCTION","slug":"/hpcc/LearnECL/AdvanceConcepts/function","title":"FUNCTION"},{"id":"JOIN","slug":"/hpcc/LearnECL/AdvanceConcepts/join","title":"JOIN"},{"id":"MODULE","slug":"/hpcc/LearnECL/AdvanceConcepts/module","title":"MODULE"},{"id":"PROJECT","slug":"/hpcc/LearnECL/AdvanceConcepts/project","title":"PROJECT"},{"id":"TABLE","slug":"/hpcc/LearnECL/AdvanceConcepts/table","title":"TABLE"},{"id":"TRANSFORM","slug":"/hpcc/LearnECL/AdvanceConcepts/transform","title":"TRANSFORM"}]}},{"node":{"title":"Main Concepts","items":[{"id":"dataset","slug":"/hpcc/LearnECL/MainConcepts/dataset","title":"DATASET"},{"id":"filter","slug":"/hpcc/LearnECL/MainConcepts/filter","title":"FILTER"},{"id":"introducingECL","slug":"/hpcc/LearnECL/MainConcepts/introducingECL","title":"INTRODUCING ECL"},{"id":"mathematics","slug":"/hpcc/LearnECL/MainConcepts/mathematics","title":"MATHEMATICS"},{"id":"namingConvension","slug":"/hpcc/LearnECL/MainConcepts/namingConvension","title":"NAMING CONVENTION"},{"id":"output","slug":"/hpcc/LearnECL/MainConcepts/output","title":"OUTPUT"},{"id":"recordstructure","slug":"/hpcc/LearnECL/MainConcepts/recordStructure","title":"RECORD Structure"},{"id":"sort","slug":"/hpcc/LearnECL/MainConcepts/sort","title":"SORT"}]}}]},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A flow consists of following definitions:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"intents : Dict<Intent>"}]},{"type":"text","value":" - Intent definitions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"states : Dict<State>"}]},{"type":"text","value":" - State definitions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"actions : Dict<Action>"}]},{"type":"text","value":" - Action definitions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"methods : Dict<string>"}]},{"type":"text","value":" - Flow-specific method definitions"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Additionally a flow can be set as following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"active : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nYou can enable/disable a flow by setting the active field of a flow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"volatile : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSet to true will close the flow whenever it goes outside the flow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"expire : number"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nWill set flow to expire after specified number of miliseconds"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Intents"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Intent can be defined as following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"intents:\n  <name>: <Intent>\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The intent description contains following fields:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"type : \"text\" | \"command\" | \"data\""}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nType filter to define type of the message to be associated with this intent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"condition : string | string[]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nCondition filter to rule out certain intents to be selected"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"classifier : Classifier | Classifier[]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nClassifier definition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"attributes : Dict<Attribute>"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nAttributes / slotfilling associated with the intent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fallback : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nDefine intent as fallback intent."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"priority : number"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSet priority of an intent for the selection process"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"initial : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSet whether intent can be triggered only in current flow or from other flow as well"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Condition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Condition is every valid javascript expression returning a boolean. Avaliable variables are:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"type : string"}]},{"type":"text","value":" - Message Type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"payload : JsonObject"}]},{"type":"text","value":" - Message Payload"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"content : string"}]},{"type":"text","value":" - Message Content"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"context : JsonObject"}]},{"type":"text","value":" - Flow Context"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"data : JsonObject"}]},{"type":"text","value":" - Session Data"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"config : JsonObject"}]},{"type":"text","value":" - Bot Config"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"condition: type == 'text' && content == 'hello' && !context.completed\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Classifier"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Classifier consists of following fields:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nlu : string"}]},{"type":"text","value":" - Name of defined NLU or NLU-type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hint : string"}]},{"type":"text","value":" - Prepend message with a text fragment"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"match : string"}]},{"type":"text","value":" - Match result of the classifier with a specific string"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"options : JsonObject"}]},{"type":"text","value":" - Override NLU options"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"process : method | method[]"}]},{"type":"text","value":" - Postprocess intent using methods"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"classifier:\n  nlu: topicClassifier\n  match: food\n  options:\n    lowerCase: true\n    threshold: 0.8\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example Multiple Classifiers:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"classifier:\n  - nlu: topicClassifier\n    match: food\n  - nlu: keywordClassifier\n    match: food\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example mapping label using dict:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"classifier:\n    nlu: topicClassifier\n    match: food\n    dict:\n        food: [food_a, food_b], # group multiple classes to one\n        test: testing # change label\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Attributes"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Attribute consist of following fields:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nlu : string"}]},{"type":"text","value":" - Name of defined NLU or NLU-type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hint : string"}]},{"type":"text","value":" - Prepend message with a text fragment"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"path : string"}]},{"type":"text","value":" - Result path to be taken"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"options : JsonObject"}]},{"type":"text","value":" - Override NLU options"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"process : method | method[]"}]},{"type":"text","value":" - Postprocess intent using methods"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"attributes:\n  city:\n    nlu: genericNER\n    path: LOCATION\n    options:\n      threshold: 0.6\n    process:\n      - filterCity\n      - capitalize\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example normalizing using dict:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"attributes:\n  city:\n    nlu: genericNER\n    path: location\n    options:\n      threshold: 0.6\n    dict:\n      jakarta: [jkt, jekardah, jakarta]\n      bandung: [bdg, bandung]\n      default: invalid\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"States"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"States can be defined as following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"states:\n  <name>: <State>\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The state description contains following fields:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"initial : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify initial state"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"action : string | StateAction | StateAction[]"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify action to be executed"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"end : boolean"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify end state"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"transitions : Dict<Transition|string>"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify transitions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"float : Transition"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify floating transition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"enter : Mapping | method"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify mapping or method to be executed when state is entered"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"transit : Mapping | method"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify mapping or method to be executed when transition is started"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"exit : Mapping | method"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSpecify mapping or method to be executed when state is exited"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Mapping"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Mapping is a procedure to update context / data. available variables are:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"attributes : JsonObject"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nattributes that is captured by intent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"intent : string"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\ncaptured intent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"content : string"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nmessage content"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"payload : JsonObject"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nmessage payload"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"context : JsonObject"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nFlow context"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"data : JsonObject"}]},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\nSession data"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"enter:\n  data.name: attributes.name\n  context.count: (context.count || 0)++\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example using method:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"enter: someMapping\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"method definition:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"methods:\n  someMapping(ctx): > # {intent, attributes, content, payload, data, context}\n    ctx.data.name = ctx.attributes.name;\n    ctx.context.count++;\n    return ctx;\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"State Actions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Action can be defined as a single action or multiple actions. The state action definition contains following fields:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"name : string"}]},{"type":"text","value":" - name of defined action or action type"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"condition : string"}]},{"type":"text","value":" - condition filter"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"options : JsonObject"}]},{"type":"text","value":" - override action options"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"action:\n  name: reply\n  options:\n    text: 'hi!'\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example multiple actions:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"action:\n  - name: reply\n    condition: context.mood = 'good'\n    options:\n      text: 'hi $(data.name)!'\n  - name: reply\n    condition: context.mood = 'bad'\n    options:\n      text: 'apaan sih kamu!'\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can simplify state actions (if you only have 1 action in some states) :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"action: someAction\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Transition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Transition define condition that leads to moving from one state to the other state. A transition is defined as following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"transitions:\n  <destination>: <Transition>\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Field definition:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"condition : string"}]},{"type":"text","value":" - Condition that trigger the transition"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"priority : number"}]},{"type":"text","value":" - Priority for transition selection"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fallback : boolean"}]},{"type":"text","value":" - Define fallback when no other transition matches"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mapping : Mapping | method"}]},{"type":"text","value":" - Define mapping or method that is triggered during this transition"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"transitions:\n  askDob:\n    condition: \"intent == 'yes' && !context.personGender && context.verifyGender\"\n    mapping:\n      context.personGender: 'context.verifyGender'\n      context.verifyGender: 'null'\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can simplify transitions definition :"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"transitions\n    askDob: \"intent == 'yes' && !context.personGender\"\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Floating State"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Normally it is tedious if we have to define a transition to a state that is available in every state. e.g. Cancel state. To mitigate this we can define a floating transition. The system will automatically attach this transition in every state."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"float: <Transition>\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Events"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can define a mapping or method that is triggered during these events:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"enter"}]},{"type":"text","value":" - this event is triggered when entering a state"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"transit"}]},{"type":"text","value":" - this event is triggered before transition process"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"exit"}]},{"type":"text","value":" - this event is triggered after transition process"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Meta Context"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Additional meta context accessible in states at "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"context.<meta>"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$start : boolean"}]},{"type":"text","value":" - true if state is initial state"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$to : string"}]},{"type":"text","value":" - describe destination state. Available during "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"exit"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$from : string"}]},{"type":"text","value":" - describe origin state. Available during "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"enter"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"$end : boolean"}]},{"type":"text","value":" - true if state is end state"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"states:\n  stateA:\n    enter:\n      context.stateACount: (context.stateACount || 0)++\n    transit:\n      context.name: attributes.name || null\n    exit:\n      context.stateA.to: context.$to\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Actions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Actions can be defined as following:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"actions:\n  <name>: <Action>\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Following fields are available:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"type : string"}]},{"type":"text","value":" - action type."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"method : method"}]},{"type":"text","value":" - specify if action type is method"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"options: JsonObject"}]},{"type":"text","value":" - action options"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"condition : string"}]},{"type":"text","value":" - action condition"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Example:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"actions:\n  askName:\n    type: reply\n    options:\n      text: 'nama kamu siapa?'\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Available action types are described in "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Action Types"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Flow Switching"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whenever bot reaches a state that is not an end state, the flow will stay open. The following message will trigger a transition to the next state. There is a case where the incoming message cannot be handled by any intents in current flow. In that case it will try to find a flow with a matching intent. When the second flow closes, the system will create internal message reenter."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"{\n    type: \"command\",\n    content: \"reenter\",\n    payload: null\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this reenter need to be catched by the previous flow that is open:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"text","value":"intents:\n  reenter:\n    type: command\n    condition: content == \"reenter\"\n"}]}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/hpcc-solutions-lab/kata-ml/flow/#intents\">Intents</a></p>\n<ul>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#condition\">Condition</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#classifier\">Classifier</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#attributes\">Attributes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/hpcc-solutions-lab/kata-ml/flow/#states\">States</a></p>\n<ul>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#mapping\">Mapping</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#state-actions\">State Actions</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#transition\">Transition</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/hpcc-solutions-lab/kata-ml/flow/#floating-state\">Floating State</a></p>\n<ul>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#events\">Events</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#meta-context\">Meta Context</a></li>\n</ul>\n</li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#actions\">Actions</a></li>\n<li><a href=\"/hpcc-solutions-lab/kata-ml/flow/#flow-switching\">Flow Switching</a></li>\n</ul>","excerpt":"A flow consists of following definitions:intents : Dict<Intent> - Intent definitionsstates : Dict<State> - State definitionsactions : Dict…","frontmatter":{"id":"kata-ml-flow","title":"Flow","description":null,"prev":"kata-ml-overview","next":"kata-ml-data-structure"},"fields":{"slug":"/kata-ml/flow/"}},"allFile":{"edges":[{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/Learn-ECL","ref":"master","pathname":"/hpccsystems-solutions-lab/Learn-ECL.git","organization":"hpccsystems-solutions-lab","name":"Learn-ECL"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/ECL-Pattern-Job-Scheduling","ref":"master","pathname":"/hpccsystems-solutions-lab/ECL-Pattern-Job-Scheduling.git","organization":"hpccsystems-solutions-lab","name":"ECL-Pattern-Job-Scheduling"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/CodeDay_May2020","ref":"master","pathname":"/hpccsystems-solutions-lab/CodeDay_May2020.git","organization":"hpccsystems-solutions-lab","name":"CodeDay_May2020"}}},{"node":{"gitRemote":{"webLink":"https://alfjjacob:58e9fd5edbad4eccf8bb133c55491be00091f1c7@github.com/hpccsystems-solutions-lab/ECL-Sample-Cheatsheet","ref":"master","pathname":"/hpccsystems-solutions-lab/ECL-Sample-Cheatsheet.git","organization":"hpccsystems-solutions-lab","name":"ECL-Sample-Cheatsheet"}}}]}},"pageContext":{"slug":"/kata-ml/flow/"}}}